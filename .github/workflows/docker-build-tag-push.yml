name: Docker Build, Test and Push

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

env:
  REGISTRY: docker.io
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for testing
        run: |
          docker build -t $REPO_NAME:test .

      - name: Run tests on the image
        run: |
          echo "Running tests on the built image..."
          # Replace with your actual test commands
          docker run --rm $REPO_NAME:test echo "Test completed successfully"

  build-and-push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get safe version number
        id: version
        run: |
          # Use GitHub run number for reliable versioning
          VERSION="1.0.${{ github.run_number }}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Using version: $VERSION"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}:${{ env.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Display pushed tags
        run: |
          echo "Successfully pushed the following tags to Docker Hub:"
          echo "${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}:${{ env.VERSION }}"
          echo "${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}:latest"